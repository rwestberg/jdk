name: Submit tests

on:
  push:
    branches-ignore: [master]
    
env:
  BOOT_JDK_VERSION: '14.0.2'
  JTREG_VERSION: 'jtreg5.1-b01'
  GTEST_VERSION: 'release-1.8.1'

jobs:
  prerequisites_shared:
    name: Shared prerequisites
    runs-on: 'ubuntu-latest'
    steps:
    - name: Check if a jtreg image is present in the cache
      id: jtreg
      uses: actions/cache@v2
      with:
        path: ~/jtreg/
        key: jtreg-${{ env.JTREG_VERSION }}-v1

    - name: Checkout the jtreg source
      uses: actions/checkout@v2
      with:
        repository: 'openjdk/jtreg'
        ref: ${{ env.JTREG_VERSION }}
      if: steps.jtreg.outputs.cache-hit != 'true'

    - name: Build jtreg
      run: sh make/build-all.sh ${JAVA_HOME}
      if: steps.jtreg.outputs.cache-hit != 'true'

    - name: Move jtreg image to destination folder
      run: mv build/images/jtreg ~/
      if: steps.jtreg.outputs.cache-hit != 'true'

  linux_x86_64:
    name: Linux x86_64
    runs-on: 'ubuntu-latest'
    needs: prerequisites_shared
    env:
      BOOT_JDK_FILENAME: 'openjdk-14.0.2_linux-x64_bin.tar.gz'
      BOOT_JDK_URL: 'https://download.java.net/java/GA/jdk14.0.2/205943a0976c4ed48cb16f1043c5c647/12/GPL/openjdk-14.0.2_linux-x64_bin.tar.gz'
      BOOT_JDK_SHA256: '91310200f072045dc6cef2c8c23e7e6387b37c46e9de49623ce0fa461a24623d'

    steps:
    - name: Checkout the source
      uses: actions/checkout@v2
      with:
        path: jdk

    - name: Restore boot JDK from cache
      id: bootjdk
      uses: actions/cache@v2
      with:
        path: ~/bootjdk/${{ env.BOOT_JDK_VERSION }}
        key: bootjdk-${{ runner.os }}-${{ env.BOOT_JDK_VERSION }}-v1

    - name: Create boot JDK destination folder
      run: mkdir -p ${HOME}/bootjdk/${BOOT_JDK_VERSION}
      if: steps.bootjdk.outputs.cache-hit != 'true'

    - name: Download boot JDK
      run: wget -O "${HOME}/bootjdk/${BOOT_JDK_FILENAME}" "${BOOT_JDK_URL}"
      if: steps.bootjdk.outputs.cache-hit != 'true'

    - name: Verify boot JDK
      run: echo "${BOOT_JDK_SHA256} ${HOME}/bootjdk/${BOOT_JDK_FILENAME}" | sha256sum -c >/dev/null -
      if: steps.bootjdk.outputs.cache-hit != 'true'

    - name: Unpack boot JDK
      run: tar -xf "${HOME}/bootjdk/${BOOT_JDK_FILENAME}" -C "${HOME}/bootjdk/${BOOT_JDK_VERSION}"
      if: steps.bootjdk.outputs.cache-hit != 'true'

    - name: Restore jtreg from cache
      id: jtreg
      uses: actions/cache@v2
      with:
        path: ~/jtreg/
        key: jtreg-${{ env.JTREG_VERSION }}-v1

    - name: Checkout gtest sources
      uses: actions/checkout@v2
      with:
        repository: 'google/googletest'
        ref: ${{ env.GTEST_VERSION }}
        path: gtest

    - name: Install dependencies
      run: sudo apt-get install libxrandr-dev libxtst-dev libcups2-dev libasound2-dev

    - name: Configure
      run: bash configure --enable-debug --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA} --with-version-build=0 --with-boot-jdk=${HOME}/bootjdk/${BOOT_JDK_VERSION}/jdk-${BOOT_JDK_VERSION} --with-jtreg=${HOME}/jtreg --with-gtest=${GITHUB_WORKSPACE}/gtest
      working-directory: jdk

    - name: Run tier1 tests
      run: make test-tier1
      working-directory: jdk

    - name: Persist build and test logs
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: linux_x86_64_logs
        path: |
          jdk/build/*/build.log
          jdk/build/*/test-results/
          jdk/build/*/test-resupport/
